-module(soapbilling).
-export([handler/4]).
-include("billingserver.hrl").  % .hrl file generated by erlsom

handler(_Header,
        [#'p:ReserveAmount'{'AccountNumber' = AccountNumber, 'Amount' = Amount}],
        _Action, 
        _SessionValue) ->
    {ok, undefined, reserve_amount(AccountNumber, Amount)};
handler(_Header,
        [#'p:ChargeAmount'{'AccountNumber' = AccountNumber, 'Amount' = Amount}],
        _Action, 
        _SessionValue) ->
    {ok, undefined, charge_amount(AccountNumber, Amount)};
handler(_Header,
        [#'p:RefillAmount'{'AccountNumber' = AccountNumber, 'Amount' = Amount}],
        _Action, 
        _SessionValue) ->
    {ok, undefined, refill_amount(AccountNumber, Amount)};
handler(_Header,
        [#'p:ConfirmTransaction'{'TransactionId' = TransactionId}],
        _Action, 
        _SessionValue) ->
    {ok, undefined, confirm_transaction(TransactionId)};
handler(_Header,
        [#'p:CancelTransaction'{'TransactionId' = TransactionId}],
        _Action, 
        _SessionValue) ->
    {ok, undefined, cancel_transaction(TransactionId)}
        .


marshall2soap(Data) when is_binary(Data) ->
    uuid:to_string(Data);
marshall2soap(Data) when is_atom(Data) ->
    atom_to_list(Data).


charge_amount(AccountNumber, Amount) ->
    Result = billingserver:charge_amount(AccountNumber, Amount),
    Response = #'p:ChargeAmountResponse'{anyAttribs = [],
                                         'Result' = marshall2soap(Result)
                                        },
    [Response]. 

reserve_amount(AccountNumber, Amount) ->
    Result = billingserver:reserve_amount(AccountNumber, Amount),
    Response = #'p:ReserveAmountResponse'{anyAttribs = [],
                                         'Result' = marshall2soap(Result)
                                        },
    
    [Response]. 

refill_amount(AccountNumber, Amount) ->
    Result = billingserver:refill_amount(AccountNumber, Amount),
    Response = #'p:RefillAmountResponse'{anyAttribs = [],
                                         'Result' = marshall2soap(Result)
                                        },
    
    [Response].

confirm_transaction(TransactionId) ->
    Result = billingserver:confirm_transaction(uuid:to_binary(TransactionId)),
    Response = #'p:ConfirmTransactionResponse'{anyAttribs = [],
                                         'Result' = marshall2soap(Result)
                                        },
    
    [Response].

cancel_transaction(TransactionId) ->
    Result = billingserver:cancel_transaction(uuid:to_binary(TransactionId)),
    Response = #'p:CancelTransactionResponse'{anyAttribs = [],
                                         'Result' = marshall2soap(Result)
                                        },
    
    [Response].
